name: PHP-CI

on: [ push, pull_request ]

jobs:
    coding_standards:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: [ '8.1' ]
                actions:
                    - { name: composer, run: composer check-composer }
                    - { name: monorepo, run: composer check-monorepo }
                    - { name: composer-audit, run: composer audit }
                    - { name: ecs, run: composer check-ecs, cache: ecs }
                    - { name: rector, run: composer check-rector, cache: rector }
                    - { name: phpstan, run: composer check-phpstan, cache: phpstan }

        name: ${{ matrix.actions.name }} (${{ matrix.php }})

        env:
            PHP_EXTENSIONS: pdo_sqlite, openswoole, pkcs11
            PHP_EXTENSIONS_CACHE_KEY: cache-extensions-pdo_sqlite-openswoole-pkcs11

        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup cache environment
                id: cache-extensions
                uses: shivammathur/cache-extensions@v1
                with:
                    php-version: ${{ matrix.php }}
                    extensions: ${{ env.PHP_EXTENSIONS }}
                    key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

            -   name: Cache extensions
                uses: actions/cache@v3
                with:
                    path: ${{ steps.cache-extensions.outputs.dir }}
                    key: ${{ steps.cache-extensions.outputs.key }}
                    restore-keys: ${{ steps.cache-extensions.outputs.key }}

            -   name: Setup PHP ${{ matrix.php }}
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: ${{ matrix.actions.coverage || 'none' }}
                    extensions: ${{ env.PHP_EXTENSIONS }}

            -   name: Install Composer dependencies
                uses: ramsey/composer-install@v2

            -   name: Get cached Composer dependencies for Quality Tools
                id: cache-quality-tools
                uses: actions/cache@v3
                with:
                    path: quality/vendor
                    key: ${{ matrix.php }}-quality-tools-${{ hashFiles('quality/composer.lock') }}

            -   name: Install Composer dependencies for Quality Tools
                if: steps.cache-quality-tools.outputs.cache-hit == false
                uses: ramsey/composer-install@v2
                with:
                    working-directory: quality

            -   if: matrix.actions.cache
                uses: actions/cache@v3
                with:
                    path: quality/var/cache/${{ matrix.actions.cache }}
                    key: ${{ runner.os }}-${{ matrix.php }}-quality-${{ matrix.actions.name }}-${{ github.sha }}
                    restore-keys: ${{ runner.os }}-${{ matrix.php }}-quality-${{ matrix.actions.name }}-

            -   name: '[CI] Check ${{ matrix.actions.name }} [CI]'
                run: ${{ matrix.actions.run }}
                shell: bash
