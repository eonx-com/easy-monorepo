includes:
    - .quality/vendor/symplify/phpstan-extensions/config/config.neon

services:
    - class: EonX\EasyMonorepo\PHPStan\SymfonyMessengerEnvelopeLastReturnType
      tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

parameters:
    parallel:
            maximumNumberOfProcesses: 2

    paths:
        - packages

    level: 8

    bootstrapFiles:
        - %currentWorkingDirectory%/tests/bootstrap.php
        - %currentWorkingDirectory%/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Loader/Configurator/ContainerConfigurator.php

    excludePaths:
        - packages/*/var/*
        - packages/*/vendor/*
        - packages/EasyApiToken/src/Interfaces/*
        - packages/EasyApiToken/tests/Bridge/Symfony/*
        - packages/EasyCore/src/Bridge/Symfony/ApiPlatform/Filter/VirtualSearchFilter.php
        - packages/EasyCore/src/Bridge/Symfony/Resources/skeleton/*
        - packages/EasyErrorHandler/src/Bridge/Laravel/ExceptionHandler.php
        - packages/EasySecurity/src/Bridge/Symfony/Resources/config/services.php
        - packages/EasySecurity/src/Bridge/Symfony/Security/SecurityContextAuthenticator.php

    ignoreErrors:
        - '#Call to an undefined method Prophecy\\Prophecy\\ObjectProphecy::[\w\\]+\(\).#'
        - '#Call to an undefined method Mockery\\ExpectationInterface|Mockery\\HigherOrderMessage::once\(\).#'
        - '#Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition\:\:children\(\)#'

        # ---- EasyApiToken ----
        # ---- EasyAsync ----
        - message: '#Method EonX\\EasyAsync\\Tests\\AbstractTestCase::mock\(\) should return Mockery\\MockInterface but returns Mockery\\LegacyMockInterface.#'
          path: packages/EasyAsync/tests

        - message: '#Method EonX\\EasyAsync\\Tests\\Stubs\\EventDispatcherStub\:\:dispatch\(\) should return EonX\\EasyAsync\\Interfaces\\EasyAsyncEventInterface but returns object#'
          path: packages/EasyAsync/tests/Stubs/EventDispatcherStub.php

        # ---- EasyBankFiles ----
        - message: '#Call to an undefined method object\:\:getTransactionCodeDetails\(\)#'
          path: packages/EasyBankFiles/tests/Parsers/Nai/ParserTest.php

        - message: '#Method EonX\\EasyBankFiles\\Tests\\Parsers\\Nai\\ParserTest\:\:getTransactionsForAccounts\(\) is unused#'
          path: packages/EasyBankFiles/tests/Parsers/Nai/ParserTest.php

        - message: '#Unreachable statement \- code above always terminates#'
          path: packages/EasyBankFiles/tests/Parsers/Nai/ParserTest.php

        # ---- EasyBatch ----
        # ---- EasyBugsnag ----
        - message: '#Return type \(void\) of method EonX\\EasyBugsnag\\Tests\\Bridge\\Symfony\\Stubs\\ConnectionStub\:\:(query|prepare)\(\) should be compatible with return type \(Doctrine\\DBAL\\Driver\\Statement\) of method Doctrine\\DBAL\\Driver\\Connection\:\:(query|prepare)\(\)#'
          path: packages/EasyBugsnag/tests/Bridge/Symfony/Stubs/ConnectionStub.php

        # ---- EasyCore ----
        - message: '#Access to an undefined property object::\$[\w]+.#'
          path: packages/EasyCore/tests/Bridge/Laravel/Middleware/SetContentLengthTest.php

        - message: '#Access to an undefined property EonX\\EasyCore\\Bridge\\Laravel\\Providers\\CachedConfigServiceProvider::\$loadedConfigurations.#'
          path: packages/EasyCore/src/Bridge/Laravel/Providers

        - message: '#Method EonX\\EasyCore\\Tests\\AbstractTestCase\:\:mock\(\) should return Mockery\\MockInterface but returns Mockery\\LegacyMockInterface#'
          path: packages/EasyCore/tests/AbstractTestCase.php

        - message: '#Cannot call method newInstanceWithoutConstructor\(\) on ReflectionClass\|null#'
          path: packages/EasyCore/src/Bridge/Symfony/DependencyInjection/Compiler/AutoConfigureEventListenersPass.php

        - message: '#PHPDoc tag @var for variable \$dataPersister has invalid type EonX\\EasyCore\\Bridge\\Symfony\\ApiPlatform\\Traits\\RequestAttributesAwareTrait#'
          path: packages/EasyCore/src/Bridge/Symfony/ApiPlatform/Listeners/ResolveRequestAttributesListener.php

        - message: '#Call to method setRequestAttributes\(\) on an unknown class EonX\\EasyCore\\Bridge\\Symfony\\ApiPlatform\\Traits\\RequestAttributesAwareTrait#'
          path: packages/EasyCore/src/Bridge/Symfony/ApiPlatform/Listeners/ResolveRequestAttributesListener.php

        - message: '#Call to an undefined method ApiPlatform\\Core\\DataPersister\\DataPersisterInterface\:\:getPersistersResponse\(\)#'
          path: packages/EasyCore/src/Bridge/Symfony/ApiPlatform/DataCollector/RequestDataCollector.php

        - message: '#Call to an undefined method ApiPlatform\\Core\\DataPersister\\ContextAwareDataPersisterInterface\:\:(getSimpleDataPersisters|getDataPersisters)\(\)#'
          path: packages/EasyCore/src/Bridge/Symfony/ApiPlatform/DataPersister/TraceableChainSimpleDataPersister.php

        - message: '#Property Symfony\\Component\\HttpFoundation\\Request\:\:\$request \(Symfony\\Component\\HttpFoundation\\InputBag\) does not accept Symfony\\Component\\HttpFoundation\\ParameterBag#'
          path: packages/EasyCore/src/Bridge/Laravel/ApiFormats/Middleware/ReplaceApiFormatsMiddleware.php

        # ---- EasyDecision ----
        # ---- EasyDoctrine ----
        - message: '#Strict comparison using === between true and false will always evaluate to false.#'
          path: packages/EasyDoctrine/src/ORM/Decorators/EntityManagerDecorator.php

        # ---- EasyEncryption ----
        - message: '#Unreachable statement \- code above always terminates#'
          path: packages/EasyEncryption/src/Encryptor.php

        # ---- EasyErrorHandler ----
        # ---- EasyHttpClient ----
        - message: '#Method EonX\\EasyHttpClient\\Bridge\\EasyBugsnag\\HttpRequestSentBreadcrumbListener\:\:getCarbon\(\) should return Carbon\\Carbon but returns Carbon\\Carbon\|false#'
          path: packages/EasyHttpClient/src/Bridge/EasyBugsnag/HttpRequestSentBreadcrumbListener.php

        # ---- EasyLock ----
        # ---- EasyLogging ----DoctrineDbalLengthAwarePaginator
        - message: '#Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition\:\:children\(\)#'
          path: packages/EasyLogging/src/Bridge/Symfony/DependencyInjection/Configuration.php

        - message: '#Parameter \#2 \$level of class Monolog\\Handler\\StreamHandler constructor expects (.*?), int given#'
          path: packages/EasyLogging/src/Config/StreamHandlerConfigProvider.php

        # ---- EasyPagination ----
        - '#Parameter \#2 \$alias of method Doctrine\\ORM\\QueryBuilder\:\:from\(\) expects string, string\|null given#'
        - '#Access to an undefined property EonX\\EasyPagination\\Tests\\Stubs\\Model\\Item\:\:\$title#'
        - '#Access to an undefined property EonX\\EasyPagination\\Tests\\Stubs\\Model\\Item\:\:\$id#'
        - '#Parameter \#1 \$queryBuilder of method EonX\\EasyPagination\\Paginators\\DoctrineOrmLengthAwarePaginator\:\:fetchResults\(\) expects Doctrine\\ORM\\QueryBuilder, Doctrine\\DBAL\\Query\\QueryBuilder\|Doctrine\\ORM\\QueryBuilder given#'
        - '#Parameter \#1 \$queryBuilder of method EonX\\EasyPagination\\Paginators\\DoctrineOrmPaginator\:\:fetchResults\(\) expects Doctrine\\ORM\\QueryBuilder, Doctrine\\DBAL\\Query\\QueryBuilder\|Doctrine\\ORM\\QueryBuilder given#'
        - '#Parameter \#1 \$queryBuilder of method EonX\\EasyPagination\\Paginators\\DoctrineDbalLengthAwarePaginator\:\:fetchResults\(\) expects Doctrine\\DBAL\\Query\\QueryBuilder, Doctrine\\DBAL\\Query\\QueryBuilder\|Doctrine\\ORM\\QueryBuilder given#'
        - '#Parameter \#1 \$queryBuilder of method EonX\\EasyPagination\\Paginators\\DoctrineDbalPaginator\:\:fetchResults\(\) expects Doctrine\\DBAL\\Query\\QueryBuilder, Doctrine\\DBAL\\Query\\QueryBuilder\|Doctrine\\ORM\\QueryBuilder given#'

        # ---- EasyPipeline ----
        - message: '#Parameter \#2 \$pipelines of class EonX\\EasyPipeline\\Implementations\\Illuminate\\IlluminatePipelineFactory constructor expects array<string>, array<int, int\|string> given.#'
          path: packages/EasyPipeline/src/Bridge/Laravel

        - message: '#Parameter \#1 $argument of class ReflectionClass constructor expects class-string<T of object>|T of object, string given.#'
          path: packages/EasyPipeline/tests

        # ---- EasyPsr7Factory ----
        # ---- EasyRandom ----
        - message: '#Access to an undefined property EonX\\EasyRandom\\Interfaces\\RandomGeneratorInterface\:\:\$uuidV4Generator#'
          path: packages/EasyRandom/tests/Bridge/Symfony/EasyRandomBundleTest.php

        # ---- EasyRepository ----
        - message: '#Call to an undefined method Illuminate\\Database\\Eloquent\\Model::find\(\).#'
          path: packages/EasyRepository/src/Implementations/Illuminate

        - message: '#Property EonX\\EasyRepository\\Implementations\\Doctrine\\ORM\\AbstractDoctrineOrmRepository::\$repository \(Doctrine\\ORM\\EntityRepository\) does not accept Doctrine\\Persistence\\ObjectRepository.#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM

        - message: '#Property EonX\\EasyRepository\\Implementations\\Doctrine\\ORM\\AbstractDoctrineOrmRepository::\$manager \(Doctrine\\ORM\\EntityManagerInterface\) does not accept Doctrine\\Persistence\\ObjectManager\|null.#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM

        - message: '#Method EonX\\EasyRepository\\Tests\\Implementation\\Illuminate\\EloquentRepositoryStub::getModel\(\) should return Illuminate\\Database\\Eloquent\\Model but returns Mockery\\LegacyMockInterface.#'
          path: packages/EasyRepository/tests/Implementation/Illuminate

        - message: '#Parameter \#1 \$expected of static method PHPUnit\\Framework\\Assert::assertInstanceOf\(\) expects class-string<object>, string given.#'
          path: packages/EasyRepository/tests

        - message: '#Parameter \#1 $argument of class ReflectionClass constructor expects class-string<T of object>|T of object, string given.#'
          path: packages/EasyRepository/tests

        - message: '#Cannot call method getRepository\(\) on Doctrine\\Persistence\\ObjectManager\|null#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM/AbstractDoctrineOrmRepository.php

        - message: '#Property EonX\\EasyRepository\\Implementations\\Doctrine\\ORM\\AbstractDoctrineOrmRepository\:\:\$repository with generic class Doctrine\\ORM\\EntityRepository does not specify its types\: T#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM/DoctrineOrmRepositoryTrait.php

        - message: '#Property EonX\\EasyRepository\\Implementations\\Doctrine\\ORM\\AbstractOptimizedDoctrineOrmRepository\:\:\$repository with generic class Doctrine\\ORM\\EntityRepository does not specify its types\: T#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM/AbstractOptimizedDoctrineOrmRepository.php

        - message: '#Method EonX\\EasyRepository\\Implementations\\Doctrine\\ORM\\AbstractDoctrineOrmRepository\:\:getClassMetadata\(\) return type with generic class Doctrine\\ORM\\Mapping\\ClassMetadata does not specify its types\: T#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM/DoctrineOrmRepositoryTrait.php

        - message: '#Method EonX\\EasyRepository\\Implementations\\Doctrine\\ORM\\AbstractOptimizedDoctrineOrmRepository\:\:getClassMetadata\(\) return type with generic class Doctrine\\ORM\\Mapping\\ClassMetadata does not specify its types\: T#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM/AbstractOptimizedDoctrineOrmRepository.php

        - message: '#Method EonX\\EasyRepository\\Implementations\\Doctrine\\ORM\\AbstractOptimizedDoctrineOrmRepository\:\:getManager\(\) should return Doctrine\\ORM\\EntityManagerInterface but returns Doctrine\\Persistence\\ObjectManager\|null#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM/AbstractOptimizedDoctrineOrmRepository.php

        - message: '#Property EonX\\EasyRepository\\Implementations\\Doctrine\\ORM\\AbstractOptimizedDoctrineOrmRepository\:\:\$manager \(Doctrine\\ORM\\EntityManagerInterface\|null\) does not accept Doctrine\\Persistence\\ObjectManager\|null#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM/AbstractOptimizedDoctrineOrmRepository.php

        - message: '#Method EonX\\EasyRepository\\Implementations\\Doctrine\\ORM\\AbstractOptimizedDoctrineOrmRepository\:\:getRepository\(\) return type with generic class Doctrine\\ORM\\EntityRepository does not specify its types\: T#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM/AbstractOptimizedDoctrineOrmRepository.php

        # ---- EasyRequestId ----
        # ---- EasySchedule ----
        - message: '#Parameter \#1 \$app of method EonX\\EasySchedule\\Interfaces\\ScheduleInterface\:\:setApplication\(\) expects Symfony\\Component\\Console\\Application, Symfony\\Component\\Console\\Application\|null given#'
          path: packages/EasySchedule/src/Command/ScheduleRunCommand.php

        - message: '#Cannot cast Symfony\\Component\\Console\\Input\\InputInterface to string#'
          path: packages/EasySchedule/src/Event.php

        # ---- EasySecurity ----
        - message: '#Parameter \#2 \$permissions of class EonX\\EasySecurity\\Authorization\\Role constructor expects array<EonX\\EasySecurity\\Interfaces\\Authorization\\PermissionInterface\|string\>\|null, array<int, EonX\\EasySecurity\\Authorization\\Permission\|stdClass\|string\> given#'
          path: packages/EasySecurity/tests/Authorization/RoleTest.php

        - message: '#Method EonX\\EasySecurity\\Bridge\\Symfony\\Security\\FakeKernel\:\:handle\(\) should return Symfony\\Component\\HttpFoundation\\Response but return statement is missing#'
          path: packages/EasySecurity/src/Bridge/Symfony/Security/FakeKernel.php

        # ---- EasySsm ----
        - message: '#Parameter \#1 \$stream of class Symfony\\Component\\Console\\Output\\StreamOutput constructor expects resource, resource\|false given#'
          path: packages/EasySsm/tests/Services/Dotenv/Loaders/ConsoleOutputLoaderTest.php

        - message: '#Return type \(array\) of method EonX\\EasySsm\\Tests\\Stubs\\BaseSsmClientStub\:\:getPaginator\(\) should be compatible with return type \(Aws\\ResultPaginator\) of method Aws\\Aws(Client|ClientInterface)\:\:getPaginator\(\)#'
          path: packages/EasySsm/tests/Stubs/BaseSsmClientStub.php

        - message: '#Parameter \#1 \$envKey of class Symfony\\Component\\Dotenv\\Dotenv constructor expects string, true given#'
          path: packages/EasySsm/src/Services/Dotenv/Loaders/DotenvLoader.php

        # ---- EasyTest ----
        - message: '#Unsafe usage of new static\(\)#'
          path: packages/EasyTest/src/InvalidDataMaker/AbstractInvalidDataMaker.php

        # ---- EasyUtils ----
        - message: '#Comparison operation ">" between 0 and 0 is always false#'
          path: packages/EasyUtils/src/Helpers/EnvVarSubstitutionHelper.php

        - message: '#Result of && is always false#'
          path: packages/EasyUtils/src/Helpers/EnvVarSubstitutionHelper.php

        # ---- EasyWebhook ----
        - message: '#Unsafe usage of new static\(\)#' # Until we find a better design
          path: packages/EasyWebhook/src/AbstractWebhook.php
